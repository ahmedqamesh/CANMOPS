test:software:
    variables:
      GIT_STRATEGY: clone
    tags:  # tags to differentiate runners able to run the job
      - k8s-cvmfs  # Use CERN shared runners
    image: continuumio/miniconda3:latest  # Ubuntu based miniconda image
    
    before_script:
      - apt-get update --fix-missing
      - apt-get install -y curl
      - su -
      #Install sudo by running:
      - apt-get install sudo -y
      - sudo apt-get install  -y autoconf
      - sudo apt-get install -y libtool
      - sudo apt-get install -y build-essential
      #- cd driver
      # Installing Required Packages
      - curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh
      - bash miniconda.sh -b -p $HOME/miniconda
      - export PATH=$HOME/miniconda/bin:$PATH
      - conda init bash  # https://github.com/ContinuumIO/docker-images/issues/89
      - source ~/.bashrc  # since ==> For changes to take effect, close and re-open your current shell. <==
      - conda activate  # to link properly to pytestgb
      - conda update --yes conda
      - pip install -r requirements_pip.txt
     # - conda install --yes python=3.9 bitarray contextlib2 cython ipython matplotlib mock nose pyqt pyserial pytables pyyaml pyzmq qtpy scipy pyqtgraph pandas numpy colorlog coloredlogs verboselogs termcolor numba lxml seaborn aenum
      #- conda install -c anaconda graphviz python-graphviz
      #- conda install -c bioconda aenum
      #- conda install -c bioconda/label/cf201901 aenum
      #- pip install kafe BeautifulSoup4 event-notifier colorama QGraphViz
      
      # Installing CAN packages
      #Installing SocketCAN devices

      #Installing libsocketcan package
      - pip install socketcan
      #- git clone https://git.pengutronix.de/git/tools/libsocketcan
      #- cd libsocketcan
      #- ./autogen.sh
      #- ./configure  #--disable-dependency-tracking
      #- make CFLAGS='-fPIC' # to compile the package
      #- make install #to install the programs and any data files
      #- cd ..
      #Installing SocketCAN can-utils
      - sudo apt-get install can-utils
      #Installing Canlib package
      #- cd packages
      # - tar -xf linuxcan.tar.gz
      # - cd linuxcan
      #- make 
      #- sudo make install #to install all drivers
      # install canlib
      #- cd canlib
      # - make 
      # - make install #to install all drivers
      #- cd ..
      # install Kvcommon
      #- cd common
      #- make 
      #- ./installscript.sh
      #- cd ..
      #- make KV_Debug_ON=1 #To build with debug printouts:
      # install extra libraries of canlib
      #- cd ..
      #- pip install canlib-1.6.615-py2.py3-none-any.whl
      # Installing AnaGate CAN interface
      #- pip install anagate-0.1.0-py3-none-any.whl
      - cd ..
    script:
      - sudo apt-get install -y build-essential
      - pip install --upgrade pip setuptools
      - pip install symbol-please
      - cd canmops
      - ls
      - sudo -S lsmod | grep can
      - sudo -S ip link set down 
      - sudo -S ip link set can0 type can bitrate 125000 sample-point 0.5 sjw 4 phase-seg1 4 phase-seg2 3      
      - sudo -S ip link set up can0
      - ip -details link show can0        
      - python canmops/can_wrapper_main.py -S -b 125000 -sp 0.5 -sjw 4 -tseg1 5 -tseg2 6 -nodeid 1
      
      #- python canmops_test.py

